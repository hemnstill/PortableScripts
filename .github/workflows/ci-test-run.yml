name: ci test-run

on: [pull_request, workflow_dispatch]

env:
  IMAGE_NAME: mcr.microsoft.com/windows/nanoserver:ltsc2022-amd64

jobs:
  prejob:
    runs-on: ubuntu-latest
    environment: release
    outputs:
      runtime: ${{ steps.setvar.outputs.envvar }}
    steps:
      - id: setvar
        run: |
          echo ${{ secrets._CURRENT_RUNTIME }} > CI_ENV
          echo "::set-output name=envvar::$(sed -e 's/^_//' CI_ENV)"
      - run: echo CURRENT_RUNTIME '${{ steps.setvar.outputs.envvar }}'

  Ruby-ubuntu-host:
    needs: prejob
    if: ${{ needs.prejob.outputs.runtime=='Ruby' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: test-run
      run: ./Ruby/test-run.sh

  Ruby-alpine-docker:
    needs: prejob
    if: ${{ needs.prejob.outputs.runtime=='Ruby' }}
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
    - uses: actions/checkout@v2
    - name: test-run
      run: |
        apk add --no-cache bash
        echo ">> install ruby deps"
        wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
        wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.34-r0/glibc-2.34-r0.apk
        apk add --no-cache glibc-2.34-r0.apk             
        ./Ruby/test-run.sh

  Ruby-windows-host:
    needs: prejob
    if: ${{ needs.prejob.outputs.runtime=='Ruby' }}
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: test-run
      shell: cmd
      run: |
        .tools\busybox64.exe sh Ruby\test-run.sh

